/*
 * This file is generated by jOOQ.
 */
package fi.jubic.snoozy.example.db;


import fi.jubic.snoozy.example.db.tables.Todo;
import fi.jubic.snoozy.example.db.tables.User;
import fi.jubic.snoozy.example.db.tables.records.TodoRecord;
import fi.jubic.snoozy.example.db.tables.records.UserRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>test</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TodoRecord, Long> IDENTITY_TODO = Identities0.IDENTITY_TODO;
    public static final Identity<UserRecord, Long> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TodoRecord> KEY_TODO_PRIMARY = UniqueKeys0.KEY_TODO_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_NAME = UniqueKeys0.KEY_USER_NAME;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<TodoRecord, UserRecord> FK_TODO_USER_ID = ForeignKeys0.FK_TODO_USER_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TodoRecord, Long> IDENTITY_TODO = Internal.createIdentity(Todo.TODO, Todo.TODO.ID);
        public static Identity<UserRecord, Long> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<TodoRecord> KEY_TODO_PRIMARY = Internal.createUniqueKey(Todo.TODO, "KEY_todo_PRIMARY", Todo.TODO.ID);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.ID);
        public static final UniqueKey<UserRecord> KEY_USER_NAME = Internal.createUniqueKey(User.USER, "KEY_user_name", User.USER.NAME);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<TodoRecord, UserRecord> FK_TODO_USER_ID = Internal.createForeignKey(fi.jubic.snoozy.example.db.Keys.KEY_USER_PRIMARY, Todo.TODO, "fk_todo_user_id", Todo.TODO.USER_ID);
    }
}
